plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'

	id "org.asciidoctor.jvm.convert" version "3.3.2" // AsciiDoc 문법으로 작성하면 Asciidoctor를 이용해서 html로 변환해준다.
}

group = 'com.test'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	// 비밀번호 암호화 라이브러리
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-crypto
	implementation 'org.springframework.security:spring-security-crypto'
	// https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on
	implementation 'org.bouncycastle:bcprov-jdk15on:1.70'


	// ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
	implementation 'com.querydsl:querydsl-core:5.0.0'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// RestDocs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
	useJUnitPlatform()
}

ext { // 전역 변수
	snippetsDir = file('build/generated-snippets') // 문서의 조각조각들을 snipppets라고 하고, 그 스니펙에 대한 디렉토리를 정의함
}

test {
	outputs.dir snippetsDir // 테스트의 결과를 snippetsDir에 저장한다.
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test // test 수행한 다음에 asciidoctor를 수행한다.
}

bootJar {
	enabled = true
	dependsOn asciidoctor

	copy {
		from asciidoctor.outputDir
		into 'src/main/resources/static/docs'
	}

}

jar {
	enabled = false
}